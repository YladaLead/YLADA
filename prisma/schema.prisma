// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Lead {
  id          String   @id @default(cuid())
  name        String
  email       String
  phone       String?
  age         Int?
  gender      String?
  weight      Float?
  height      Float?
  activity    String?
  
  // Dados específicos por calculadora
  calculatorType String // 'bmi', 'body-composition', 'protein', 'hydration', 'meal-planner', 'nutrition-assessment'
  results      Json?    // Resultados do cálculo
  recommendations Json? // Recomendações geradas
  
  // Dados do quiz
  quizType     String?  // 'nutritional-assessment', 'lifestyle-evaluation', 'health-goals'
  quizResults  Json?    // Resultados do quiz
  
  // Status do lead
  status       String   @default("new") // 'new', 'contacted', 'converted', 'lost'
  priority     String   @default("medium") // 'low', 'medium', 'high'
  
  // Metadados
  source       String?  // Origem do lead
  ipAddress    String?
  userAgent    String?
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  
  // Relacionamentos
  professionalId String?
  professional   Professional? @relation(fields: [professionalId], references: [id])
  notes          LeadNote[]
  
  @@map("leads")
}

model Professional {
  id          String   @id @default(cuid())
  name        String
  email       String   @unique
  phone       String?
  specialty   String?  // 'nutritionist', 'personal-trainer', 'wellness-coach', 'distributor'
  company     String?
  license     String?  // Número da licença profissional
  
  // Configurações
  isActive    Boolean  @default(true)
  maxLeads    Int      @default(100)
  
  // Metadados
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  // Relacionamentos
  leads       Lead[]
  
  @@map("professionals")
}

model LeadNote {
  id        String   @id @default(cuid())
  leadId    String
  lead      Lead     @relation(fields: [leadId], references: [id], onDelete: Cascade)
  content   String
  author    String   // Nome do profissional que fez a anotação
  createdAt DateTime @default(now())
  
  @@map("lead_notes")
}
