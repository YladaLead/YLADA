// Configura√ß√µes por tipo de neg√≥cio
export const BUSINESS_TYPES = {
  fitness: {
    name: 'Fitness & Academia',
    emoji: 'üèãÔ∏è',
    color: 'bg-blue-500',
    description: 'Personal trainers, academias, crossfit',
    tools: ['bmi', 'body-composition', 'protein', 'hydration', 'meal-planner']
  },
  nutrition: {
    name: 'Nutri√ß√£o & Alimenta√ß√£o',
    emoji: 'ü•ó',
    color: 'bg-green-500',
    description: 'Nutricionistas, coaches nutricionais',
    tools: ['nutrition-assessment', 'meal-planner', 'protein', 'hydration', 'bmi']
  },
  wellness: {
    name: 'Bem-estar & Spa',
    emoji: 'üßò',
    color: 'bg-purple-500',
    description: 'Spas, terapias, bem-estar',
    tools: ['wellness-checkup', 'lifestyle-evaluation', 'health-goals']
  },
  business: {
    name: 'Neg√≥cios & Coaching',
    emoji: 'üíº',
    color: 'bg-orange-500',
    description: 'Coaches, consultores, MLM',
    tools: ['inspirar-pessoas', 'perfil-empreendedor', 'onboarding-rapido']
  },
  beauty: {
    name: 'Beleza & Est√©tica',
    emoji: 'üíÑ',
    color: 'bg-pink-500',
    description: 'Est√©tica, cosm√©tica, beleza',
    tools: ['perfil-bem-estar', 'bem-estar-diario', 'alimentacao-saudavel']
  },
  health: {
    name: 'Sa√∫de & Medicina',
    emoji: 'üè•',
    color: 'bg-red-500',
    description: 'M√©dicos, fisioterapeutas, sa√∫de',
    tools: ['nutrition-assessment', 'health-goals', 'wellness-checkup']
  },
  lifestyle: {
    name: 'Lifestyle & Desenvolvimento',
    emoji: 'üåü',
    color: 'bg-yellow-500',
    description: 'Life coaches, desenvolvimento pessoal',
    tools: ['lifestyle-evaluation', 'health-goals', 'perfil-bem-estar']
  }
} as const

export type BusinessType = keyof typeof BUSINESS_TYPES

// Fun√ß√£o para obter configura√ß√£o do tipo de neg√≥cio
export function getBusinessConfig(businessType: string) {
  return BUSINESS_TYPES[businessType as BusinessType] || BUSINESS_TYPES.fitness
}

// Fun√ß√£o para gerar URL com subdom√≠nio
export function generateSubdomainUrl(toolName: string, secureId: string, businessType: string = 'fitness') {
  const subdomain = businessType.toLowerCase()
  
  // Em desenvolvimento, usar localhost com porta
  if (typeof window !== 'undefined' && window.location.hostname === 'localhost') {
    return `${window.location.protocol}//${window.location.host}/tools/${toolName}?ref=${secureId}&business_type=${subdomain}`
  }
  
  // Em produ√ß√£o, usar subdom√≠nios
  const domain = process.env.NEXT_PUBLIC_DOMAIN || 'ylada.com'
  const protocol = process.env.NODE_ENV === 'production' ? 'https' : 'http'
  
  return `${protocol}://${subdomain}.${domain}/tools/${toolName}?ref=${secureId}`
}
